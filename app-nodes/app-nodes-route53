#!/bin/bash

# Source Variables
source ../vars &> /dev/null

# Query the deployed instance for it's private IP, assign to a variable.  Then add this entry to the json file that creates the record.
# Do this for both nodes.
while [ -z "$NODE00_IP" ]; do
    NODE00_IP=$(aws ec2 describe-instances \
    --query Reservations[].Instances[].NetworkInterfaces[].PrivateIpAddress[] \
    --filters "Name=tag:Name,Values=${UNIQ_VAR}-app-node00.*" --output text)
done

sed -i \
-e "s/\"Value.*/\"Value\": \"$NODE00_IP\"/g" \
-e "s/\"Name.*/\"Name\": \"$APP_NODE0\",/g" app-node/node00-a-record.json

sed -i \
-e "s/\"Value.*/\"Value\": \"$NODE00_IP\"/g" \
-e "s/\"Name.*/\"Name\": \"$APP_NODE0\",/g" app-node/node00-a-record-terminate.json

while [ -z "$NODE01_IP" ]; do
    NODE01_IP=$(aws ec2 describe-instances \
    --query Reservations[].Instances[].NetworkInterfaces[].PrivateIpAddress[] \
    --filters "Name=tag:Name,Values=${UNIQ_VAR}-app-node01.*" \
    --output text)
done

sed -i \
-e "s/\"Value.*/\"Value\": \"$NODE01_IP\"/g" \
-e "s/\"Name.*/\"Name\": \"$APP_NODE1\",/g" app-node/node01-a-record.json

sed -i \
-e "s/\"Value.*/\"Value\": \"$NODE01_IP\"/g" \
-e "s/\"Name.*/\"Name\": \"$APP_NODE1\",/g" app-node/node01-a-record-terminate.json

# Set up Route53 A record
while [ -z "$HOSTED_ZONE" ]; do
    HOSTED_ZONE=$(aws route53 list-hosted-zones-by-name \
    --dns-name=$INFRA_DNS --max-items=1 \
    --output text | awk '/HOSTED/ { print $3 }')
done

aws route53 change-resource-record-sets \
--hosted-zone-id $HOSTED_ZONE \
--change-batch file://app-node/node00-a-record.json

aws route53 change-resource-record-sets \
--hosted-zone-id $HOSTED_ZONE \
--change-batch file://app-node/node01-a-record.json

while [ -z "$REV_HOSTED_ZONE" ]; do
    REV_HOSTED_ZONE=$(aws route53 list-hosted-zones-by-name \
    --dns-name=$DNS_PTR --max-items=1 \
    --output text | awk '/HOSTED/ { print $3 }')
done

# Need to reverse those IPs for PTR records
REV_DNS0=$(echo "$NODE00_IP" | awk -F. '{print $4"."$3"."$2"."$1".in-addr.arpa"}')
REV_DNS1=$(echo "$NODE01_IP" | awk -F. '{print $4"."$3"."$2"."$1".in-addr.arpa"}')

# Configure the json files with the appropriate entries
sed -i \
-e "s/\"Value.*/\"Value\": \"$APP_NODE0\"/g" \
-e "s/\"Name.*/\"Name\": \"$REV_DNS0\",/g" app-node/node00-ptr-record.json

sed -i \
-e "s/\"Value.*/\"Value\": \"$APP_NODE0\"/g" \
-e "s/\"Name.*/\"Name\": \"$REV_DNS0\",/g" app-node/node00-ptr-record-terminate.json

sed -i \
-e "s/\"Value.*/\"Value\": \"$APP_NODE1\"/g" \
-e "s/\"Name.*/\"Name\": \"$REV_DNS1\",/g" app-node/node01-ptr-record.json

sed -i \
-e "s/\"Value.*/\"Value\": \"$APP_NODE1\"/g" \
-e "s/\"Name.*/\"Name\": \"$REV_DNS1\",/g" app-node/node01-ptr-record-terminate.json

# Deploy the records
aws route53 change-resource-record-sets \
--hosted-zone-id $REV_HOSTED_ZONE \
--change-batch file://app-node/node00-ptr-record.json

aws route53 change-resource-record-sets \
--hosted-zone-id $REV_HOSTED_ZONE \
--change-batch file://app-node/node01-ptr-record.json
