#!/bin/bash

TIMEOUT=60

# Set up path for var file so we can include it.
INCLUDE="$(dirname "$0")"

# Source Variables
source $INCLUDE/../vars &> /dev/null

# Get subnet id
SUBNET_ID_1=$(aws ec2 describe-subnets \
--query Subnets[].SubnetId[] \
--filters Name=cidr,Values=$SUBNET_CIDR_1 \
--output text)

# Get security group id
SEC_GROUP_ID=$(aws ec2 describe-security-groups \
--query 'SecurityGroups[].GroupId[]' \
--filters Name=group-name,Values=$BASTION_SEC_GROUP \
--output text)

# Get vpc id
VPC_ID=$(aws ec2 describe-vpcs \
--query Vpcs[].VpcId[] \
--filters Name=cidr,Values=$CIDR \
--output text)

# Launch AMI instance
aws ec2 run-instances \
--image-id $AMI_ID \
--count 1 \
--instance-type $BASTION_INSTANCE \
--key-name $KEY_NAME \
--security-group-ids $SEC_GROUP_ID \
--subnet-id $SUBNET_ID_1

sleep $TIMEOUT

# Query instances to get instance ID
INSTANCE_ID=$(aws ec2 describe-instances \
--query 'Reservations[].Instances[].[InstanceId]' \
--filters "Name=instance-state-name,Values=running" "Name=instance.group-name,Values=$BASTION_SEC_GROUP" \
--output text)

# Add tags
aws ec2 create-tags \
--resources $INSTANCE_ID \
--tags Key=Name,Value=$BASTION

# Need to sleep so the instance can boot
sleep $TIMEOUT

# Create EIP
EIP=$(aws ec2 allocate-address --domain vpc --output text | awk '{ print $1 }')

# Associate EIP to instance
aws ec2 associate-address \
--instance-id $INSTANCE_ID \
--allocation-id $EIP

# Set up Route53 record
# Create infrastructure zone, must provide a unique caller reference
aws route53 create-hosted-zone \
--name $INFRA_DNS \
--caller-reference $(date "+%F-%H:%M:%S") \
--hosted-zone-config Comment="scollier private hosted zone test"

HOSTED_ZONE=$(aws route53 list-hosted-zones-by-name \
--dns-name=$INFRA_DNS \
--output text | awk '/HOSTED/ { print $3 }')

# Sleep and let the EIP allocation and hosted zone creation take place
sleep 10

BASTION_IP=$(aws ec2 describe-instances \
--query Reservations[].Instances[].PublicIpAddress[] \
--filters "Name=tag:Name,Values=$BASTION" \
--output text)

sed -i \
-e "s/\"Value.*/\"Value\": \"$BASTION_IP\"/g" \
-e "s/\"Name.*/\"Name\": \"$BASTION\",/g" bastion-resource-record.json

# This json file is not applied yet, it is used by the terminate/delete-all script
sed -i \
-e "s/\"Value.*/\"Value\": \"$BASTION_IP\"/g" \
-e "s/\"Name.*/\"Name\": \"$BASTION\",/g" bastion-resource-record-terminate.json

# Create the A record.
aws route53 change-resource-record-sets \
--hosted-zone-id $HOSTED_ZONE \
--change-batch file://bastion-resource-record.json
